I"$ <h2 id="-use-wax">… use Wax</h2>

<p>Facets is a <a href="https://minicomp.github.io/wax/">Wax</a> theme. Wax in turn relies on Jekyll. To use Facets you need to be familiar with both Jekyll and Wax. To learn more about setting up and using Wax visit <a href="https://minicomp.github.io/wiki/wax/">the Wax wiki</a>. You can learn more about using Jekyll on the <a href="https://jekyllrb.com/docs/">Jekyll docs</a>, or in <a href="https://programminghistorian.org/en/lessons/building-static-sites-with-jekyll-github-pages">this great tutorial</a> by Amanda Visconti at Programming Historian.</p>

<h2 id="-define-facets">… define facets</h2>

<p>As other Wax sites, <em>Facets</em> depends on the metadata you create. Let’s assume you are using a CSV to record data for your collection. In order for <em>Facets</em> to work, that CSV must have designated columns for each large category you want to “facet” by. These become the <em>facet headers</em> at the top of the drop-down menus above the gallery. Each of these columns then accepts a small range of sub-categories, or <em>facet values</em>. These become the check boxes.</p>

<p><br />
<img src="/teaching-collection/assets/figures/fig1.png" height="100%" width="100%" alt="Figure 1. Illustration of Facet Headers and Facet Values" />
<br />
<br /></p>

<p>The first step before using a facet gallery on any one of your pages is to add <code class="language-plaintext highlighter-rouge">gallery: True</code> to your YAML header. See the example at the top of our <a href="https://github.com/minicomp/wax-facets/blob/main/pages/collection.md">collection.md</a> file.</p>

<p>Next, we tell <em>Facets</em> what collection gallery to insert and what columns to facet by with a Jekyll <code class="language-plaintext highlighter-rouge">include</code> command that brings in the <code class="language-plaintext highlighter-rouge">facet_gallery</code> at the desired place on the page. This <code class="language-plaintext highlighter-rouge">include</code> snippet requires a <code class="language-plaintext highlighter-rouge">collection:</code> variable and a <code class="language-plaintext highlighter-rouge">facet_by:</code> variable. You can also pass an optional variable to control the number of columns displayed on large screens: <code class="language-plaintext highlighter-rouge">num_column:</code>. This theme already comes with the following example in the <a href="/collection/">Browse</a> page. In order to use it, just replace the sample values with your own when editing the page:</p>

<p><code class="language-plaintext highlighter-rouge">{% include facet_gallery.html collection='qatar' facet_by='object_type|location' num_column=4 %}</code></p>

<p>Notice that insteald of the normal <code class="language-plaintext highlighter-rouge">collection_gallery.html</code> we use a special <code class="language-plaintext highlighter-rouge">facet_gallery.html</code>.</p>

<p>For the <code class="language-plaintext highlighter-rouge">facet_by:</code> variable, specify one or more field names in a pipe-separated list. For the <code class="language-plaintext highlighter-rouge">num_column</code> variable, specify a number that is a divisor of 12 (i.e, 1, 2, 3, 4, or 6). This is the number of columns you want to have. The default is 2 columns.</p>

<h2 id="-create-a-subset-gallery">… create a subset gallery</h2>

<p><em>Facets</em> also allows you to create galleries for subsets of your collections. A subset collection will only include items that have <a href="https://shopify.github.io/liquid/filters/where/">a truthy value</a> for that specific “field value.” Consider the example we use in ‘<a href="/exhibits/subset/">Exhibit with Subset Collection</a>’:</p>

<p><code class="language-plaintext highlighter-rouge">{% include subset_gallery.html collection='qatar' field='object_type' value='portrait' num_column=4 %}</code></p>

<p>The gallery that results from this instruction only shows portraits. This <code class="language-plaintext highlighter-rouge">include</code> command is slightly different than the one for faceted browsing. They both share a <code class="language-plaintext highlighter-rouge">collection:</code> and a <code class="language-plaintext highlighter-rouge">num_column:</code> variable. To use this <code class="language-plaintext highlighter-rouge">include</code>, though, you need to declare a <code class="language-plaintext highlighter-rouge">field:</code> variable. This is equivalent to a column from your data. Then you pick the <code class="language-plaintext highlighter-rouge">value:</code> that you want to limit results to. Notice that this gallery view does not have a faceting menu.</p>

<h2 id="-change-our-design">… change our design</h2>

<p><em>Facets</em> is a prototype, just as <em>Wax</em> itself is a prototype, a tool to think with that is also immediately practical. Both of these are built on Jekyll, which allows you an enormous amount of flexibility for changing the design of your site. Feel free to play around with the code that makes our exhibit pages and our galleries tick. The more you transform our work, the more we will feel like we succeeded.</p>

<p>The CSS that determines the look of the site is done using a combination of SASS and the bootstrap framework. To change some common variables, like colors or fonts, you can edit the <code class="language-plaintext highlighter-rouge">/assets/css/style.scss</code> file. You can always override our own choices from this file as well. You can also add your own CSS files to the <code class="language-plaintext highlighter-rouge">_sass</code> folder, and simply import them into the main sass file above.</p>

<h2 id="-use-facets-with-another-wax-theme">… use Facets with another Wax theme</h2>

<p>In theory, Facets should be able to be transferred to another Wax theme following four simple steps.</p>

<ol>
  <li>Copy our <a href="https://github.com/minicomp/wax-facets/blob/main/_includes/facet_gallery.html">facet_gallery.html</a> file into your <code class="language-plaintext highlighter-rouge">_includes</code> folder.</li>
  <li>Copy our <a href="https://github.com/minicomp/wax-facets/blob/main/assets/js/facets.js">facets.js</a> file into wherever you keep your JavaScript files. The Main Wax theme for example uses the <code class="language-plaintext highlighter-rouge">/assets/</code> folder directly. Make a note of where you put it. You will use the path in the next step.</li>
  <li>Load our javascript file from step #2 into your relevant layout. The easiest way is just to place the following line at the bottom of your default layout:<br />
<br />
<code class="language-plaintext highlighter-rouge">&lt;script type='text/javascript' async defer src='{{ "/assets/facets.js" | absolute_url }}'&gt;&lt;/script&gt;</code><br />
<br />
The other alternative is to create a layout just for galleries and place the script there, like we do in the Facets theme.</li>
  <li>Copy the “/* FACET GALLERY */” section of our “<a href="https://github.com/minicomp/wax-facets/blob/main/_sass/_facets.scss">_facets.scss</a>” file at the end of your SASS or CSS file. We put this section at the end of our file for your convenience. If you are working with the original Wax theme, this snippet would go at the end of the “<a href="https://github.com/minicomp/wax/blob/main/_sass/_wax.scss">/_sass/_wax.scss</a>” file.</li>
</ol>

<p>N.B. Make sure to call the right file in your <code class="language-plaintext highlighter-rouge">include</code> command. Notice we’re calling <code class="language-plaintext highlighter-rouge">facet_gallery.html</code> and not <code class="language-plaintext highlighter-rouge">collection_gallery.html</code> as we would normally. Ex:<br />
<br />
<code class="language-plaintext highlighter-rouge">{% include facet_gallery.html collection='qatar' facet_by='object_type' only='portrait' num_column=4 %}</code></p>

<p>After these steps you might still want to tweak the final results. For example, if you’re transferring to the original Wax theme, you might want to tweak the font size and the line height on the card. We’ll leave the final pixel-pushing to you.</p>
:ET